import(readxl)
library(readxl)
file_list <- list.files("../data/")
file_list
file_list <- list.files("../data/")
file_list
file_list <- list.files("../data/")
file_list
file_list
getwd()
file_list <- list.files("../data/")
file_list
file_list
getwd()
setwd("scripts")
file_list <- list.files("../data/")
file_list
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
setwd("..")
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
dir
getwd()
setwd("data")
t
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
dataset
str(dataset)
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE, sep=",")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE, sep=",")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
dataset <- NULL
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, header=TRUE, sep=",")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.csv(file, header=TRUE, sep=",")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
library(rgdal)
install.packages("rgdal")
library(rgdal)
nad83_coords <- dataset
coordinates(nad83_coords) <- c('XBLOCK', 'YBLOCK')
proj4string(nad83_coords)=CRS("+init=EPSG:26985")
coordinates_deg <- spTransform(nad83_coords,CRS("+init=epsg:4326"))
write.csv(coordinates_deg,'Export_Crime_Data.csv')
coordinates_deg$XBLOCK
x <- coordinates_deg
head(x)
library(tidyverse)
install.packages("dplyr")
install.packages("dplyr")
library(ggmap)
library(tidyverse)
library(ggmap)
library(ggthemes)
library(lubridate)
install.packages(c("ggmap", "ggthemes"))
data <- read.csv("data/Export_Crime/Data.csv", stringsAsFactors =F)
data <- read.csv("Export_Crime/Data.csv", stringsAsFactors =F)
data <- read.csv("Export_Crime_Data.csv", stringsAsFactors =F)
d <- data %>% select(REPORT_DAT,OFFENSE,METHOD,WARD,XBLOCK,YBLOCK)
mean(d$XBLOCK)
mean(d$YBLOCK)
x <- mean(d$XBLOCK)
y <- mean(d$YBLOCK)
?ggmap
??ggmap
get_map(x,y)
ggmap::get_map(x,y)
d$date <- ymd_hms(d$REPORT_DAT)
d <- data
d$date <- ymd_hms(d$REPORT_DAT)
library(lubridate)
library(ggmap)
library(ggthemes)
d <- data
d$date <- ymd_hms(d$REPORT_DAT)
library(ggthemes)
library(lubridate)
d$date <- ymd_hms(d$REPORT_DAT)
str(d)
d$date <- ymd_hms(d$REPORT_DAT)
d$REPORT_DAT
d$date <- mdy_hms(d$REPORT_DAT)
d <- d %>% mutate(year = year(date), month = month(date),
day = day(date), hour = hour(date),
minute = minute(date),
second = second(date))
d <- d %>% mutate(EW = ifelse(XBLOCK > -77.0362, "East", "West"),
NS = ifelse(YBLOCK > 38.8895, "North", "South"))
d <- d %>% mutate(quad = ifelse(EW == "West" & NS == "North", "Northwest",
ifelse(EW == "East" & NS == "North", "Northeast",
ifelse(EW == "West" & NS == "South", "Southwest",
"Southeast"))))
d$quad <- as.factor(d$quad)
d <- mutate(d, crimetype = ifelse(OFFENSE =="HOMICIDE", "Violent",
ifelse(OFFENSE =="SEX ABUSE", "Violent",
ifelse(OFFENSE =="ROBBERY", "Violent",
ifelse(OFFENSE =="ASSAULT W/DANGEROUS WEAPON", "Violent",
"Non-Violent" )))))
d$crimetype <- as.factor(d$crimetype)
load("crime_flat.rda")
save(d, file="crime_flat.rda")
write.csv(d, "dc_crime_add_vars.csv")
load("crime_flat.rda")
d %>% subset(year < 2017) %>% group_by(year) %>% summarize(total = n()) %>%
ggplot(aes(x=year, y = total)) + geom_line(size=2) + scale_x_continuous()
d %>%  subset(year < 2017) %>%  group_by(year,OFFENSE) %>% summarize(total = n()) %>%
ggplot(aes(x = year, y = total, fill = OFFENSE)) + geom_area(position = 'stack') +
scale_x_continuous()
d %>% filter(year < 2017, OFFENSE =="HOMICIDE") %>% group_by(year) %>% summarize(total = n()) %>%
ggplot(aes(x=year, y = total)) + geom_line() + scale_x_continuous()
d %>% filter(year < 2017, OFFENSE =="SEX ABUSE") %>% group_by(year) %>% summarize(total = n()) %>%
ggplot(aes(x=year, y = total)) + geom_line() + scale_x_continuous()
d %>% filter(year < 2017, OFFENSE =="THEFT/OTHER") %>% group_by(year) %>% summarize(total = n()) %>%
ggplot(aes(x=year, y = total)) + geom_line() + scale_x_continuous()
quadrant <- d %>% filter(year < 2017) %>% group_by(year,OFFENSE,quad) %>% summarize(total = n())
save(quad, file="quad.rda")
load("quad.rda")
ggplot(quad,aes(x=year, y = total, colour = quad)) + geom_line(size=1.1) + facet_wrap(~OFFENSE, scales="free_y")
quad <- as.data.frame(quadrant)
d %>% filter(year < 2017) %>% group_by(year, OFFENSE) %>% summarize(total = n()) %>%
ggplot(aes(x=year, y = total)) + geom_line(size=1.1) + facet_wrap(~OFFENSE, scales="free_y")
d  %>% group_by(hour, OFFENSE, quad) %>% summarize(total = n()) %>%
ggplot(aes(x=hour, y = total, colour = quad)) + geom_line() + facet_wrap(~OFFENSE,  scales="free_y")
map <- get_map(location = "washington, dc", zoom = 12)
hom <- filter(d, OFFENSE=="HOMICIDE")
ggmap(map) + geom_point(data = k, aes(x = long, y = lat))
ggmap(map) + geom_point(data = hom, aes(x = long, y = lat))
ggmap(map) + geom_point(data = hom, aes(x = long, y = lat))
ggmap(map) + geom_point(data = hom, aes(x = XBLOCK, y = YBLOCK))
map2 <- get_map(location = "anacostia metro, washington, dc", zoom = 13)
for(i in y) {
print(i)
}
ggplot(hom, aes(x=XBLOCK, y = YBLOCK, colour = METHOD)) + geom_point()
for(i in y) {
ggplot(hom[year == i,], aes(x=XBLOCK, y = YBLOCK, colour = METHOD)) + geom_point()
}
hom[year==2008,]
d$WARD <- as.factor(d$WARD)
d$OFFENSE <- as.factor(d$OFFENSE)
ward <- d %>%
group_by(WARD, OFFENSE) %>%
summarize(total = n()) %>% dcast(WARD ~ OFFENSE)
library(reshape2)
ward <- d %>%
group_by(WARD, OFFENSE) %>%
summarize(total = n()) %>% dcast(WARD ~ OFFENSE)
ggmap(map) + geom_point(data = hom, aes(x = XBLOCK, y = YBLOCK))
str(hom)
hom %>% filter(year==2017)
ggmap(map) + geom_point(data = hom, aes(x = XBLOCK, y = YBLOCK))
hom <- hom %>% filter(year==2017)
ggmap(map) + geom_point(data = hom, aes(x = XBLOCK, y = YBLOCK))
hom <- hom %>% filter(year==2017 or year == 2016)
hom <- hom %>% filter(year==2017 | year == 2016)
ggmap(map) + geom_point(data = hom, aes(x = XBLOCK, y = YBLOCK))
ggmap(map) + geom_point(data = hom, aes(x = XBLOCK, y = YBLOCK))
hom <- hom %>% filter(year==2017 | year == 2016)
hom <- hom %>% filter(year== 2017 | 2016)
hom <- hom %>% filter(year== 2017 | year == 2016)
hom <- hom %>% filter(year== 2016)
hom <- hom %>% filter(year==2016)
hom <- hom %>% filter(year==2015)
hom <- filter(d, OFFENSE=="HOMICIDE")
View(hom)
hom <- hom %>% filter(year==2016)
hom <- filter(d, OFFENSE=="HOMICIDE")
hom <- hom %>% filter(year==2016 | year == 2017)
ggmap(map) + geom_point(data = hom, aes(x = XBLOCK, y = YBLOCK))
library(leaflet)
install.packages("leaflet")
library(leaflet)
hom <- d %>% subset(OFFENSE == "HOMICIDE")
m <- leaflet(data = hom) %>% addTiles() %>%
addMarkers(~XBLOCK, ~YBLOCK, popup = ~as.character(hom$REPORT_DAT))
m
library(htmlwidgets)
saveWidget(m, file="homoicide_plot.html")
hom <- d %>% subset(OFFENSE == "HOMICIDE", year == 2017)
m <- leaflet(data = hom) %>% addTiles() %>%
addMarkers(~XBLOCK, ~YBLOCK, popup = ~as.character(hom$REPORT_DAT))
m
=
hom <- d %>% filter(OFFENSE == "HOMICIDE", year == 2017)
m <- leaflet(data = hom) %>% addTiles() %>%
addMarkers(~XBLOCK, ~YBLOCK, popup = ~as.character(hom$REPORT_DAT))
m
hom <- d %>% filter(OFFENSE == "HOMICIDE", year == 2017, month ==6)
m <- leaflet(data = hom) %>% addTiles() %>%
addMarkers(~XBLOCK, ~YBLOCK, popup = ~as.character(hom$REPORT_DAT))
m
hom <- d %>% filter(OFFENSE == "HOMICIDE", year == 2017, month == y)
hom <- d %>% filter(OFFENSE == "HOMICIDE", year == 2017, month == 7)
m <- leaflet(data = hom) %>% addTiles() %>%
addMarkers(~XBLOCK, ~YBLOCK, popup = ~as.character(hom$REPORT_DAT))
m
library(htmlwidgets)
hom <- d %>% filter(OFFENSE == "HOMICIDE", year == 2017, month == 6)
m <- leaflet(data = hom) %>% addTiles() %>%
addMarkers(~XBLOCK, ~YBLOCK, popup = ~as.character(hom$REPORT_DAT))
m
table(d$OFFENSE)
hom <- d %>% filter(OFFENSE == "ASSAULT W/DANGEROUS WEAPON", year == 2017, month == 6)
m <- leaflet(data = hom) %>% addTiles() %>%
addMarkers(~XBLOCK, ~YBLOCK, popup = ~as.character(hom$REPORT_DAT))
m
hom <- d %>% filter(OFFENSE == "ASSAULT W/DANGEROUS WEAPON", year == 2017, month == )
m <- leaflet(data = hom) %>% addTiles() %>%
addMarkers(~XBLOCK, ~YBLOCK, popup = ~as.character(hom$REPORT_DAT))
m
