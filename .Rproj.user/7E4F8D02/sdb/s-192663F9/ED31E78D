{
    "collab_server" : "",
    "contents" : "---\ntitle: \"DC Crime Data Blitz\"\nauthor: Lucas Vinze\ndate: April 12, 2017\noutput:\n  revealjs::revealjs_presentation:\n    theme: sky\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, cache = TRUE)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggmap)\nlibrary(MASS)\n\nload(\"../data/crime_flat.rda\")\n\n#need to add a hard copy map to display on Kaggle. \nmap <- get_map(location = \"washington, dc\", zoom = 12)\n\nhom <- filter(d, OFFENSE==\"HOMICIDE\")\n\n```\n\n# Data Summary - Built with RStudio\n\n\n\n## Where to get the data?\n\n-DC Metro Crime Data\n\n-http://crimemap.dc.gov/CrimeMapSearch.aspx#tabs-GeoOther\n\n- Easily aggregated by download by 8 geographic Wards\n- From Jan 1, 2008 to now\n- Scripts can download daily \n\n\n## Data Totals\n\n```{r summary_table,  warning=F, message=F}\n\ndim(d)\nsummary(d$OFFENSE)\n```\n\n# Demographics Vs Homicides\n\n## A Quick Look\n![Historic Published Data](Poverty-Map.jpg)\n\n\n\n## Homicides Mapped\n\n```{r homicide}\nggmap(map) + geom_point(data = hom, aes(x = XBLOCK, y = YBLOCK, colour = METHOD))\n\n```\n\n\n\n\n## Noma Homicdes\n\n```{r noma}\nnoma <- get_map(location = \"Noma, dc\", zoom = 15)\nggmap(noma) + geom_point(data = hom, aes(x = XBLOCK, y = YBLOCK, colour = METHOD))\n\n```\n\n## Anacostia\n\n```{r anacostia}\nanacostia <- get_map(location = \"Anacostia, DC\", zoom = 14)\nggmap(anacostia) + geom_point(data = hom, aes(x = XBLOCK, y = YBLOCK, colour = METHOD))\n\n```\n\n\n\n#Theft\n\n## Theft Mapped\nToo much to see!\n```{r theft}\nggmap(map) + geom_point(data = hom, aes(x = XBLOCK, y = YBLOCK, colour = METHOD))\n\n```\n\n#Trends\n\n\n##crimes per year\n```{r}\nd %>% subset(year < 2017) %>% group_by(year) %>% summarize(total = n()) %>%\n  ggplot(aes(x=year, y = total)) + geom_line(size=2) + scale_x_continuous()\n```  \n\n##Stacked Plot\n```{r}\nd %>%  subset(year < 2017) %>%  group_by(year,OFFENSE) %>% summarize(total = n()) %>% \n ggplot(aes(x = year, y = total, fill = OFFENSE)) + geom_area(position = 'stack') + \n  scale_x_continuous()\n```\n\n##Facet Grid by Crime\n```{r}\nd %>% filter(year < 2017) %>% group_by(year, OFFENSE) %>% summarize(total = n()) %>%\n  ggplot(aes(x=year, y = total)) + geom_line(size=1.1) + facet_wrap(~OFFENSE, scales=\"free_y\")\n```\n\n##Facet Grid by Quadrant\n\n![image](quadrant_facet.jpeg)\n```{r, warning=F}\n#Split by Horizontal lines -> \n\n#load(\"quad.rda\")\n#ggplot(quadrant,aes(x=year, y = total, colour = quad)) + geom_line(size=1.1) + #facet_wrap(~OFFENSE, scales=\"free_y\")\n\n```\n\n## Facet Grid Code\n\n```{r echo=T}\n\n\n#Facet Grid by Crime\nd %>% filter(year < 2017) %>% group_by(year, OFFENSE) %>% summarize(total = n()) %>%\n  ggplot(aes(x=year, y = total)) + geom_line(size=1.1) + facet_wrap(~OFFENSE, scales=\"free_y\")\n\n\n#Facet Grid with Quadrant\nd  %>% group_by(hour, OFFENSE, quad) %>% summarize(total = n()) %>%\n  ggplot(aes(x=hour, y = total, colour = quad)) + geom_line() + facet_wrap(~OFFENSE,  scales=\"free_y\")\n\n```\n\n\n\n#When are crimes reported? \n\n##  Time of Day\n\n```{r}\n\ntime <- d  %>% group_by(hour, OFFENSE) %>% summarize(total = n())\n\nggplot(time, aes(x=hour, y = total,  fill = OFFENSE)) + geom_bar(stat=\"identity\")\n\n```\n\n## Theft only\n\n```{r}\n\ntheft <- d %>% filter(OFFENSE == \"THEFT F/AUTO\" | OFFENSE == \"THEFT/OTHER\") %>%\n  group_by(hour, OFFENSE) %>% summarize(total = n())\n\n\ntheft_day <- filter(theft ,hour > 8)\nggplot(theft_day, aes(x=hour, y = total, fill = OFFENSE)) + geom_bar(stat=\"identity\")\n\n\n\nggplot(theft_day, aes(x=hour, y = total, colour = OFFENSE)) + geom_line()\n\n```\n\n## Split by DC quadrant\n\n```{r}\n\n d  %>% group_by(hour, OFFENSE, quad) %>% summarize(total = n()) %>%\n    ggplot(aes(x=hour, y = total, colour = quad)) + geom_line() + facet_wrap(~OFFENSE,  scales=\"free_y\")\n```\n \n \n\n\n#Interactive Mapping\n\n##With Zoom\n-Leaflet library for interactivity\n-Add graphical layers & popup info\n-Best rendered with Server \n\n![image](leaflet.png)\n\n#Heat Maps\n\n## Using density plots\n\n```{r}\n\n\nLatLonCounts <- as.data.frame(table(round(hom$XBLOCK,2), round(hom$YBLOCK,2)))\n\nLatLonCounts$Long <- as.numeric(as.character(LatLonCounts$Var1))\nLatLonCounts$Lat <- as.numeric(as.character(LatLonCounts$Var2))\n\n\nggmap(map) + geom_point(data = LatLonCounts, aes(x = Long, y = Lat, color = Freq, size = Freq)) + scale_color_gradient(low = \"yellow\", high = \"red\")\n\n```\n\n\n## Add Geometric tiles\n\n```{r}\nLatLonCounts2 <- subset(LatLonCounts, Freq > 0)\nggmap(map) + geom_tile(data = LatLonCounts2, aes(x = Long, y = Lat, alpha = Freq), fill = \"red\")\n\n```\n\n\n## Contour plot\n\n```{r}\n\nggmap(map) +\n  geom_tile(aes(x = XBLOCK, y = YBLOCK), data = hom) +\n  scale_fill_identity() +\n  geom_density2d(aes(x = XBLOCK, y = YBLOCK, colour = ..level..), \n                 bins = I(10), fill = NA, alpha = I(1/2), size = I(.75), data = hom)\n\n```\n\n",
    "created" : 1509711374704.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2626808688",
    "id" : "ED31E78D",
    "lastKnownWriteTime" : 1509712559,
    "last_content_update" : 1509712559588,
    "path" : "C:/R/dc_crime_data/scripts/DC Crime.Rmd",
    "project_path" : "scripts/DC Crime.Rmd",
    "properties" : {
        "last_setup_crc32" : "843BEE2Ca98fe575"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}